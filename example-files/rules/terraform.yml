Version: 1
Description: Rules for Terraform configuration files
Type: Terraform
Files:
  - "*.tf"
Rules:
  - id: R1
    message: Instance type should be t2.micro or m3.medium
    resource: aws_instance
    assertions:
      - type: value
        key: instance_type
        op: in
        value: t2.micro,m3.medium
    severity: WARNING
    tags:
      - ec2
  - id: R2
    message: Not an approved AMI
    resource: aws_instance
    assertions:
      - type: value
        key: ami
        op: in
        value: ami-f2d3638a
    severity: FAILURE
    tags:
      - ec2
  - id: R3
    message: Department tag is not valid
    resource: aws_instance
    except:
        - foo
        - third
    assertions:
      - type: value
        key: "tags[].Department | [0]"
        op: in
        value: Operations,Sales,Marketing,Engineering
    severity: WARNING
    tags:
      - ec2
  - id: R4
    message: Role name should contain the string 'role'
    resource: aws_iam_role
    assertions:
      - type: value
        key: name
        op: contains
        value: "role"
    severity: WARNING
  - id: R5
    message: Bucket name should end with ".com"
    resource: aws_s3_bucket
    assertions:
      - type: value
        key: bucket
        op: regex
        value: ".com$"
    severity: WARNING
  - id: R6
    message: CostCenter tag is missing
    resource: aws_instance
    assertions:
      - type: value
        key: "tags[].CostCenter | [0]"
        op: present
    severity: FAILURE
  - id: R7
    message: Should not have a Foo tag
    resource: aws_instance
    assertions:
      - type: value
        key: "tags[].Foo"
        op: absent
    severity: FAILURE
  - id: VOLUME1
    resource: aws_ebs_volume
    message: EBS Volumes must be encrypted
    severity: FAILURE
    assertions:
      - type: value
        key: encrypted
        op: eq
        value: true
    tags:
      - ebs
  - id: ORTEST
    resource: aws_instance
    message: Should have instance_type of t2.micro or m3.medium
    severity: WARNING
    assertions:
      - or:
        - type: value
          key: instance_type
          op: eq
          value: t2.micro
        - type: value
          key: instance_type
          op: eq
          value: m3.medium

  - id: ANDTEST
    resource: aws_instance
    message: Should have both Project and Department tags
    severity: WARNING
    assertions:
      - and:
        - type: value
          key: "tags[].Department | [0]"
          op: present
        - type: value
          key: "tags[].Project | [0]"
          op: present
    tags:
      - and-test
  - id: NOTTEST
    resource: aws_instance
    message: Should not have instance type of c4.large
    severity: WARNING
    assertions:
      - not:
        - type: value
          key: instance_type
          op: eq
          value: c4.large
  - id: SG1
    resource: aws_security_group
    message: Security group should not allow ingress from 0.0.0.0/0
    severity: FAILURE
    assertions:
      - not:
        - type: value
          key: "ingress[].cidr_blocks[]"
          op: contains
          value: "0.0.0.0/0"
  - id: SG2
    resource: aws_security_group
    message: Security group should not allow ingress from 0.0.0.0/0
    severity: FAILURE
    assertions:
      - not:
        - type: value
          key: "ingress[?(from_port==`22`)].cidr_blocks[]"
          op: contains
          value: "0.0.0.0/0"
  - id: SG3
    resource: aws_security_group
    message: Security group should not allow ingress from 0.0.0.0/0
    severity: FAILURE
    assertions:
      - not:
        - type: value
          key: "ingress[?(from_port==`3389`)].cidr_blocks[]"
          op: contains
          value: "0.0.0.0/0"
  - id: VALUEFROM1
    message: Instance type should be in list from S3 object
    resource: aws_instance
    assertions:
      - type: value
        key: instance_type
        op: in
        value_from:
          url: s3://config-rules-for-lambda/instance-types
    severity: WARNING
    tags:
      - ec2
  - id: CLOUDFRONT_LOGGING
    message: CloudFront Distribution must configure logging
    resource: s3_distribution
    severity: FAILURE
    assertions:
      - type: value
        key: logging_config
        op: present
  - id: POLICY_NOT_ACTION
    message: Should not allow not action in IAM policy
    resource: aws_iam_policy
    severity: WARNING
    assertions:
      - type: value
        key: policy.Statement[].NotAction
        op: absent
  - id: POLICY_NOT_RESOURCE
    message: Should not allow not resource in IAM policy
    resource: aws_iam_policy
    severity: WARNING
    assertions:
      - type: value
        key: policy.Statement[].NotResource
        op: absent
  - id: POLICY_WILDCARD_ACTION
    message: Should not allow not wildcard action in IAM policy
    resource: aws_iam_policy
    severity: FAILURE
    assertions:
      - not:
        - type: value
          key: policy.Statement[].Action
          op: contains
          value: "*"
  - id: POLICY_WILDCARD_RESOURCE
    message: Should not allow not wildcard resource in IAM policy
    resource: aws_iam_policy
    severity: WARNING
    assertions:
      - not:
        - type: value
          key: policy.Statement[].Resource
          op: contains
          value: "*"
  - id: ELB_ACCESS_LOGGING
    message: ELB should enable access logging
    resource: aws_elb
    severity: WARNING
    assertions:
      - type: value
        key: access_logs
        op: present
    tags:
      - elb
  - id: S3_NOT_ACTION
    message: SHould not use NotAction in S3 bucket policy
    resource: aws_s3_bucket_policy
    severity: WARNING
    assertions:
      - type: value
        key: policy.Statement[].NotAction
        op: absent
    tags:
      - s3
  - id: S3_NOT_PRINCIPAL
    message: Should not use NotPrincipal in S3 bucket policy
    resource: aws_s3_bucket_policy
    severity: WARNING
    assertions:
      - type: value
        key: policy.Statement[].NotPrincipal
        op: absent
    tags:
      - s3
  - id: S3_BUCKET_POLICY_WILDCARD_PRINCIPAL
    message: Should not use wildcard principal in S3 bucket policy
    resource: aws_s3_bucket_policy
    severity: WARNING
    assertions:
      - not:
        - type: value
          key: policy.Statement[].Principal
          op: contains
          value: "*"
    tags:
      - s3
  - id: S3_BUCKET_POLICY_WILDCARD_ACTION
    message: Should not use wildcard Principal in S3 bucket policy
    resource: aws_s3_bucket_policy
    severity: WARNING
    assertions:
      - not:
        - type: value
          key: policy.Statement[].Action
          op: contains
          value: "*"
    tags:
      - s3
  - id: SNS_TOPIC_POLICY_WILDCARD_PRINCIPAL
    message: Should not use wildcard Principal in SNS topic policy
    resource: aws_sns_topic_policy
    severity: WARNING
    assertions:
      - not:
        - type: value
          key: policy.Statement[].Principal
          op: contains
          value: "*"
    tags:
      - sns
  - id: SNS_TOPIC_POLICY_NOT_ACTION
    message: Should not use NotAction in SNS topic policy
    resource: aws_sns_topic_policy
    severity: WARNING
    assertions:
      - type: value
        key: policy.Statement[].NotAction
        op: absent
    tags:
      - sns
  - id: SNS_TOPIC_POLICY_NOT_PRINCIPAL
    message: Should not use NotPrincipal in SNS topic policy
    resource: aws_sns_topic_policy
    severity: WARNING
    assertions:
      - type: value
        key: policy.Statement[].NotPrincipal
        op: absent
    tags:
      - sns
  - id: SQS_QUEUE_POLICY_WILDCARD_PRINCIPAL
    message: Should not use wildcard principal in SQS queue policy
    resource: aws_sqs_queue_policy
    severity: WARNING
    assertions:
      - not:
        - type: value
          key: policy.Statement[].Principal
          op: contains
          value: "*"
    tags:
      - sqs
  - id: SQS_QUEUE_POLICY_WILDCARD_ACTION
    message: Should not use wildcard action in SQS queue policy
    resource: aws_sqs_queue_policy
    severity: WARNING
    assertions:
      - not:
        - type: value
          key: policy.Statement[].Action
          op: contains
          value: "*"
    tags:
      - sqs
  - id: SQS_QUEUE_POLICY_NOT_ACTION
    message: Should not use NotAction in SQS queue policy
    resource: aws_sqs_queue_policy
    severity: WARNING
    assertions:
      - type: value
        key: policy.Statement[].NotAction
        op: absent
    tags:
      - sqs
  - id: SQS_QUEUE_POLICY_NOT_PRINCIPAL
    message: Should not use NotPrincipal in SQS queue policy
    resource: aws_sqs_queue_policy
    severity: WARNING
    assertions:
      - type: value
        key: policy.Statement[].NotPrincipal
        op: absent
    tags:
      - sqs
